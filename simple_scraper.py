#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∞–ø–µ—Ä –¥–ª—è —Å–±–æ—Ä–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import asyncio
import os
from dotenv import load_dotenv
from telethon import TelegramClient
from src.parsers.simple_parser import SimpleParser
from src.database.clickhouse_client import ClickHouseClient

load_dotenv()

async def simple_scrape():
    client = TelegramClient(
        'sessions/reader',
        api_id=os.getenv('API_ID_TG'),
        api_hash=os.getenv('API_HASH_TG')
    )
    
    try:
        await client.start()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª
        entity = await client.get_entity('@datasciencejobs')
        print(f"üìã –ö–∞–Ω–∞–ª: {entity.title}")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä –∏ ClickHouse –∫–ª–∏–µ–Ω—Ç
        parser = SimpleParser('job_parser')
        clickhouse = ClickHouseClient()
        
        # –°–æ–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        print("üì• –°–æ–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π...")
        messages = []
        async for message in client.iter_messages(entity, limit=10):
            messages.append(message)
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ {message.id}: {message.text[:50] if message.text else '–ú–µ–¥–∏–∞'}...")
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        # –ü–∞—Ä—Å–∏–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        print("üîÑ –ü–∞—Ä—Å–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è...")
        parsed_messages = []
        for message in messages:
            parsed = parser.parse_message(message)
            parsed['message_id'] = message.id
            parsed['channel_username'] = '@datasciencejobs'
            parsed['date'] = message.date
            parsed['views'] = getattr(message, 'views', 0)
            parsed['forwards'] = getattr(message, 'forwards', 0)
            parsed_messages.append(parsed)
        
        print("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ ClickHouse...")
        clickhouse.insert_messages(parsed_messages)
        
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(parsed_messages)} —Å–æ–æ–±—â–µ–Ω–∏–π!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await client.disconnect()

if __name__ == "__main__":
    asyncio.run(simple_scrape())
